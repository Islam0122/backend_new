import base64
import json
import os
import uuid
from typing import Any

import requests
from requests.auth import HTTPBasicAuth

CLIENT_ID='71b92890-bf91-4b6b-9645-6561b93e3d7d'
SECRET='3278c7e4-6c0c-4b7b-a8b7-9baadb679504'


def get_access_token() -> Any | None:
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json',
        'RqUID': str(uuid.uuid4()),  # —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞
    }
    payload = {"scope": "GIGACHAT_API_PERS"}

    try:
        res = requests.post(
            url=url,
            headers=headers,
            auth=HTTPBasicAuth(CLIENT_ID, SECRET),
            data=payload,
            verify=False,  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ verify=False –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –≤–∞—à–µ–π —Å—Ä–µ–¥—ã
        )
        res.raise_for_status()  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
        access_token = res.json().get("access_token")
        if not access_token:
            raise ValueError("–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω.")
        return access_token
    except requests.RequestException as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ access token:", e)
        return None


def send_prompt(msg: str, access_token: str):
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    payload = json.dumps({
        "model": "GigaChat",
        "messages": [
            {
                "role": "user",
                "content": msg,
            }
        ],
    })
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': f'Bearer {access_token}'
    }

    try:
        response = requests.post(url, headers=headers, data=payload, verify=False)
        response.raise_for_status()  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
        return response.json()["choices"][0]["message"]["content"]
    except requests.RequestException as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ GigaChat API:", e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GigaChat."


def sent_prompt_and_get_response(msg: str, language: str):
    access_token = get_access_token()

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
    messages = {
        "ru": f'‚ú®üåà –ü—Ä–∏–¥—É–º–∞–π –Ω–µ–æ–±—ã—á–Ω—É—é, —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å–∫–∞–∑–∫—É –æ {msg} üßö‚Äç‚ôÄÔ∏èü¶Ñ! –ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –∏—Å—Ç–æ—Ä–∏—è, –≥–¥–µ —Ü–∞—Ä—Å—Ç–≤–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –Ω–µ—á—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ, –∞ –≥–µ—Ä–æ–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è–º–∏ üåüüåå. –ë–æ–ª—å—à–µ —á—É–¥–µ—Å –∏ —Å–º–∞–π–ª–∏–∫–æ–≤! üòçüé≠',
        "en": f'‚ú®üåà Create an extraordinary, unique fairy tale about {msg} üßö‚Äç‚ôÄÔ∏èü¶Ñ! Let it be a story where kingdoms turn into something marvelous, and heroes face unusual events and discoveries üåüüåå. Add more wonders and emojis! üòçüé≠'
    }

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä—É—Å—Å–∫–∏–π
    message = messages.get(language, messages["ru"])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è access token
    if access_token:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç send_prompt –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–º–∞–π–ª–∏–∫–∏
        response = send_prompt(message, access_token)
        decorated_response = f'‚ú®üåü {response} üåàüßö‚Äç‚ôÇÔ∏è'
        return decorated_response
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å access token."



def sent_prompt_with_photo_and_get_response(photo, language: str):
    access_token = get_access_token()
    return "üöß –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é /start üòä"
